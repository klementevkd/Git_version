//Создать стек, содержащий целые числа. Удалить из стека все элементы с максимальной суммой цифр
#include <iostream> 
using namespace std;

struct stack { // Структура стека
	int inf; // Значение текущего элемента
	stack* next; // Указатель на следующий элемент 
};

void push(stack*& NEXT, const int INF) { // Функция добавления элемента в стек
	stack* r = new stack;  // Объявляем переменную
	r->inf = INF; // Записываем значение переданное в функцию в стек
	r->next = NEXT; // Связываем новый элемент стека с предыдущим
	NEXT = r; // Новый элемент становится вершиной стека
}

int pop(stack*& NEXT) { // Функция удаления 
	int temp = NEXT->inf; // Находим значение из вершины стека и записываем в переменную temp
	stack* r = NEXT; // Запоминаем указатель на элемент стека
	NEXT = NEXT->next; // Вершиной становиться новый элемент, который был прошлой вершиной
	delete r; // Удаляем прошлую вершину
	return temp; // Возвращение элемента
}

int countNumbers(int x){ // функция сложение цифр числа
	int sum = 0; // объявление переменной
	while (x > 0){ // пока x больше нуля
		sum += x % 10; // нахождение суммы
		x /= 10; // деление нацело 
	}
	return sum; // возвращение 
}


int main() {
	setlocale(LC_ALL, "RUS"); // Включаем русский язык
	int n, temp = 0, sum = 0, max = 0, tempc; // Объявление переменных
	bool flag = false; // добавляем флаг
	stack* st = NULL; // Объявление первого стека
	stack* stb = NULL; // объявление второго стека
	cout << "n =  "; // Вывод на экран
	cin >> n; // Ввод колличества элементов
	for (int i = 0; i < n; i++) { // заполнение стека
		cout << "a[" << i << "]: ";
		cin >> temp; // Ввод элемента
		push(st, temp); // Отправляем его в конец стека
	}

	for (int i = 0; i < n; i++) { // поиск максимально суммы 
		temp = pop(st); // Извлекаем последнее значение стека
		tempc = countNumbers(temp); // заполнение числами 
		if (max < tempc) // если сумма больше максимума 
			max = tempc; // максимум принимает значение
		push(stb, temp); // в конец стека
	}

	cout << "Новый стек: ";
	for (int i = 0; i < n; i++) { // проходим стек
		temp = pop(stb); // извлекаем последнее значение стека
		tempc = countNumbers(temp); // заполнение числами
		if (tempc == max) // если сумма цифр числа равна максимуму 
			push(st, temp); // в конец стека
		else {
			cout << temp << " "; // вывод на экран
		}
	}
	return 0; // возвращение 
}